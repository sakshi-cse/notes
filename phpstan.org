* PHPStan Setup Ubuntu server 22.04

** Install PHP:

Ensure that PHP is installed on your system. You can install it using the following commands:

#+begin_src bash
sudo apt update
sudo apt install PHP
#+end_src

** Verify the installation:

#+begin_src bash
php -v
#+end_src

** Install Composer:

Composer is a dependency manager for PHP and is used to install PHPStan. Run the following commands to install Composer:

#+begin_src bash
sudo apt install curl php-cli unzip
curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
#+end_src

** Verify the Composer installation:

#+begin_src bash
composer --version
#+end_src

** Navigate to your PHP project:

Change your working directory to the root of your PHP project:

#+begin_src bash
cd /path/to/your/project
#+end_src

** Create a composer.json file:

If you don't already have a composer.json file, create one in your project's root. Here's a basic example:

#+begin_src bash
#json

{
    "require-dev": {
        "phpstan/phpstan": "^1.0"
    }
}
Save the file.

** Install PHPStan using Composer:

Run the following command to install PHPStan and its dependencies:

#+begin_src bash

composer install
#+end_src

This will create a vendor directory in your project containing PHPStan and its dependencies.

** Run PHPStan:

Once the installation is complete, you can run PHPStan to analyze your code:

#+begin_src bash
./vendor/bin/phpstan analyse
#+end_src

This will analyze your code and report any potential issues.

** Configure PHPStan (Optional):

Create a phpstan.neon configuration file in your project directory to customize PHPStan's behavior. For example:

#+begin_src bash
#ini
parameters:
    level: 7
    paths:
        - src
#+end_src
Adjust the configuration based on your project structure and requirements.
